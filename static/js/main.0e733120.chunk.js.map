{"version":3,"sources":["Components/Templates.js","Components/Insert.js","Components/ListItem.js","Components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Templates","children","className","Insert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","type","ListItem","todo","removeTodo","onToggle","id","checked","text","cn","onClick","List","map","App","setTodo","nextId","useRef","todos","current","concat","filter","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAWeA,EATG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,oBACA,qBAAKA,UAAU,UAAf,SAA0BD,Q,iCCoBvBE,EAtBA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEb,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,uBAAa,SAAAC,GAC1BH,EAASG,EAAEC,OAAOL,SACnB,IAEGM,EAAWH,uBAAY,SAAAC,GACzBN,EAASE,GACTC,EAAS,IACTG,EAAEG,mBACH,CAACT,EAAUE,IAEd,OACI,uBAAMJ,UAAU,SAASU,SAAUA,EAAnC,UACI,uBAAOE,YAAY,wBAAwBN,SAAUA,EAAUF,MAAOA,IACtE,wBAAQS,KAAK,SAAb,SAAsB,cAAC,IAAD,U,gBCFnBC,EAfE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC3BC,EAAqBH,EAArBG,GAAIC,EAAiBJ,EAAjBI,QAASC,EAAQL,EAARK,KACpB,OACI,sBAAKpB,UAAU,WAAf,UACI,sBAAKA,UAAWqB,IAAI,WAAY,CAACF,YAAWG,QAAS,kBAAML,EAASC,IAApE,UACKC,EAAU,cAAC,IAAD,IAAiB,cAAC,IAAD,IAC5B,qBAAKnB,UAAU,OAAf,SAAuBoB,OAE3B,qBAAKpB,UAAU,SAASsB,QAAS,kBAAMN,EAAWE,IAAlD,SACI,cAAC,IAAD,UCADK,EAVF,SAAC,GAAkC,IAAjCR,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAC7B,OACI,qBAAKjB,UAAU,WAAf,SAEQe,EAAKS,KAAK,SAAAT,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,EAAMC,WAAYA,EAAYC,SAAUA,GAAvDF,EAAKG,UC0DvCO,EAxDH,WAEV,MAAwBtB,mBAAS,CAC/B,CACEe,GAAI,EACJE,KAAM,cACND,SAAS,GAEX,CACED,GAAI,EACJE,KAAM,mBACND,SAAS,GAEX,CACED,GAAI,EACJE,KAAM,eACND,SAAS,KAdb,mBAAOJ,EAAP,KAAaW,EAAb,KAmBMC,EAASC,iBAAO,GAChB1B,EAAWK,uBAAY,SAAAa,GAC3B,IAAMS,EAAQ,CACZX,GAAIS,EAAOG,QACXV,OACAD,SAAS,GAEXO,EAAQX,EAAKgB,OAAOF,IACpBF,EAAOG,SAAW,IAEpB,CAACf,IAGKC,EAAaT,uBAAY,SAAAW,GAC7BQ,EAAQX,EAAKiB,QAAO,SAAAC,GAAI,OAAIA,EAAKf,KAAOA,QACvC,CAACH,IAGEE,EAAWV,uBACf,SAAAW,GACAQ,EAAQX,EAAKS,KACT,SAAAT,GAAI,OAAIA,EAAKG,KAAOA,EAAZ,2BAAoBH,GAApB,IAA0BI,SAAUJ,EAAKI,UAAYJ,QAGhE,CAACA,IAEJ,OAEE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQb,SAAUA,IAClB,cAAC,EAAD,CAAMa,KAAMA,EAAMC,WAAYA,EAAYC,SAAUA,QChD3CiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0e733120.chunk.js","sourcesContent":["import React from 'react';\n\nconst Templates = ({ children }) => {\n    return (\n        <div className=\"templates\">\n            <div className=\"app-title\">To dos</div>\n            <div className=\"content\">{children}</div>\n        </div>\n    );\n};\n\nexport default Templates;","import React, { useCallback, useState } from 'react';\nimport { MdPlaylistAdd } from \"react-icons/md\";\n\n\nconst Insert = ({onInsert}) => {\n\n    const [value, setValue] = useState('')\n\n    const onChange = useCallback( e => {\n        setValue(e.target.value)\n    }, [])\n    \n    const onSubmit = useCallback(e => {\n        onInsert(value)\n        setValue('')\n        e.preventDefault()\n    }, [onInsert, value])\n    // useCallback's second prarameters should be array 어떤 값이 바뀌었을 때 함수를 새로 생성해야 하는지 point\n    return (\n        <form className=\"insert\" onSubmit={onSubmit}>\n            <input placeholder=\"enter something to do\" onChange={onChange} value={value}/>\n            <button type=\"submit\"><MdPlaylistAdd/></button>\n        </form>\n    );\n};\n\nexport default Insert;","import React from 'react';\nimport cn from 'classnames'\nimport { MdCheckBoxOutlineBlank, MdCheckBox, MdRemoveCircleOutline } from \"react-icons/md\";\n\nconst ListItem = ({ todo, removeTodo, onToggle }) => {\n    const {id, checked, text} = todo\n    return (\n        <div className=\"listitem\">\n            <div className={cn ('checkbox', {checked})} onClick={() => onToggle(id)}>\n                {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n                <div className=\"text\">{text}</div>\n            </div>\n            <div className=\"remove\" onClick={() => removeTodo(id)}>\n                <MdRemoveCircleOutline />\n            </div>\n        </div>\n    );\n};\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './ListItem';\n\nconst List = ({todo, removeTodo, onToggle}) => {\n    return (\n        <div className=\"todolist\">\n            {\n                todo.map((todo => <ListItem key={todo.id} todo={todo} removeTodo={removeTodo} onToggle={onToggle}/>))\n            }\n        </div>\n    );\n};\n\nexport default List;","import React, { useRef, useState, useCallback } from 'react';\nimport Templates from './Components/Templates';\nimport './Components/Templates.scss'\nimport './Components/Insert.scss'\nimport './Components/ListItem.scss'\nimport './Components/List.scss'\nimport Insert from './Components/Insert';\nimport List from './Components/List';\n\nconst App = () => {\n\n  const [todo, setTodo] = useState([\n    {\n      id: 1,\n      text: 'study react',\n      checked: true\n    },\n    {\n      id: 2,\n      text: 'study javascript',\n      checked: true\n    },\n    {\n      id: 3,\n      text: 'study vue.js',\n      checked: false\n    },\n  ])\n\n  // Add todo\n  const nextId = useRef(4)\n  const onInsert = useCallback(text => {\n    const todos = {\n      id: nextId.current,\n      text,\n      checked: false\n    }\n    setTodo(todo.concat(todos))\n    nextId.current += 1\n  }, \n  [todo])\n\n  // Remove Todo \n  const removeTodo = useCallback(id => {\n    setTodo(todo.filter(item => item.id !== id))\n  }, [todo])\n\n  // Modify Todo\n  const onToggle = useCallback(\n    id => {\n    setTodo(todo.map\n      ( todo => todo.id === id? {...todo, checked: !todo.checked } : todo, \n        ), \n      )\n  }, [todo])\n  \n  return (\n    \n    <Templates>\n      <Insert onInsert={onInsert}/>\n      <List todo={todo} removeTodo={removeTodo} onToggle={onToggle}/>\n    </Templates>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}